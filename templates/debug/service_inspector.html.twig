{% extends '@NeustaConverter/debug/_layout.html.twig' %}

{% block title %}Symfony Service-Übersicht{% endblock %}

{% block body %}
    <div class="container">
        <div class="container">

            <div class="header-container">

                <div class="header-box">
                    <img src="../../public/icon/symfony_black.svg" alt="Symfony Logo" />

                    <h1>Converter - Populator - Pattern</h1>
                    <p>
                        Here you can see an overview of all Converters, Populators, and TargetFactories that have been declared in your platform.
                        This is intended to help you understand chained calls like “Converter → Populator → Converter”.
                    </p>

                    <svg class="logo-neusta" version="1.2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 398 398"
                         width="398"
                         height="398">
                        <title>logo_neusta</title>
                        <style>
                            .s0 {
                                fill: #333
                            }
                        </style>
                        <path id="Ebene 2" class="s0"
                              d="m324.2 118.3c23.2 0 44.8 11.3 58.1 30.2c13.2 19 16.3 43.3 8.3 65c-8 21.7-26.1 38.1-48.5 44c-22.4 5.8-46.2 0.3-63.8-14.7l-57-48.5c-12.1-10.4-22-5.8-22 10c0 0 0 60.7 0 63.1c0 35.8-19.4 68.8-50.7 86.2c-31.3 17.4-69.6 16.5-100-2.4c-30.4-18.9-48.2-52.8-46.5-88.6c1.8-35.8 22.8-67.8 54.9-83.6c0.3-0.1 44.4-19.2 44.4-19.2c7.3-3.2 6.9-7-0.9-8.6l-57.7-11.6c-22.2-4.8-36.4-20.3-36.4-41.6c0-5.5 1.1-10.9 3.2-16c2.1-5.1 5.2-9.7 9.1-13.6c3.9-3.9 8.5-7 13.6-9.1c5.1-2.1 10.5-3.2 16-3.2c7 0 13.2 2.1 19.4 4.7l64.7 27.4c9.7 4.1 22.9 0.6 29.3-7.8c0 0 26.3-34.6 26.7-35.2c4-5.8 9.8-10.2 16.5-12.4c6.7-2.3 13.9-2.4 20.6-0.3c6.8 2.2 12.6 6.4 16.8 12.1c4.2 5.6 6.4 12.5 6.4 19.6c0 4.5-13.1 43.9-13.1 43.9c-3.5 10 2.4 17.5 12.9 16.6c0 0 75-6.5 75.8-6.5z"/>
                    </svg>
                </div>

                <div class="header-box header-box--info">
                    <div class="welcome">
                        <div>Welcome <span class="user-name">Symfonians</span></div>
                        <img src="../../public/icon/brand-symfony.svg" alt="Symfony Logo" />
                    </div>

                    <div class="date" id="datum"></div>
                    <div class="service-items service-items-total" id="accordion-count"></div>
                    <div id="prefix-count"></div>
                    <div class="service-items" id="pimcore-count">Pimcore: 0</div>
                    <div class="service-items" id="trinity-count">Trinity: 0</div>
                    <div class="service-items" id="headless-count">Headless: 0</div>
                    <div class="service-items" id="other-count">Other: 0</div>
                </div>

            </div>

            <div class="service-container">

                <div class="body-container">

                    <h2 class="body-headline">
                        <svg class="book" fill="#000000" width="40px" height="40px" viewBox="0 0 14 14" role="img"
                             focusable="false" aria-hidden="true" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M 6.55466,11.542 C 6.10897,11.0187 5.36501,10.459 4.6445,10.1049 3.91698,9.7473 3.22595,9.5487 2.44138,9.4719 2.28669,9.4569 2.15844,9.4429 2.15639,9.4409 c -0.002,0 0.002,-1.6151 0.01,-3.5846 l 0.0132,-3.5808 0.14284,0.014 c 0.87708,0.087 1.85601,0.4184 2.59669,0.8803 0.63833,0.398 1.29749,1.0126 1.71774,1.6015 l 0.10576,0.1482 0,3.4014 c 0,1.8707 -0.008,3.401 -0.0176,3.4007 -0.01,-3e-4 -0.0861,-0.081 -0.16992,-0.1794 z m 0.72656,-3.2297 0,-3.4156 0.20424,-0.2729 C 7.74623,4.2754 8.27075,3.7505 8.61758,3.491 9.54472,2.7971 10.55044,2.405 11.70505,2.287 l 0.14648,-0.015 0,3.5858 0,3.5859 -0.16992,0.016 C 10.0739,9.6093 8.6801,10.2726 7.5899,11.4068 l -0.30868,0.3212 0,-3.4156 z m 0.9961,3.1835 c 0.63101,-0.592 1.46635,-1.0624 2.30546,-1.2985 0.4391,-0.1235 1.01012,-0.2097 1.38918,-0.2097 0.19874,0 0.30898,-0.043 0.37116,-0.1451 0.0468,-0.077 0.0473,-0.1101 0.0474,-3.0157 l 8e-5,-2.9382 0.0879,0.016 c 0.0483,0.01 0.18544,0.048 0.30468,0.086 l 0.2168,0.069 0,3.6669 c 0,2.0168 -0.008,3.6669 -0.0179,3.6669 -0.01,0 -0.15489,-0.031 -0.32227,-0.069 -0.66143,-0.149 -1.20614,-0.2002 -1.92152,-0.1809 -0.86772,0.024 -1.54209,0.145 -2.34375,0.422 l -0.30469,0.1053 0.1875,-0.1759 z m -2.67188,0.057 C 5.27252,11.4336 4.7227,11.2931 4.35153,11.2325 c -0.50468,-0.082 -0.85286,-0.1038 -1.4714,-0.09 -0.61458,0.013 -0.98632,0.056 -1.49344,0.1711 -0.1418,0.032 -0.28682,0.065 -0.32227,0.072 l -0.0644,0.014 1.1e-4,-3.6767 1.2e-4,-3.6768 0.27529,-0.08 c 0.1514,-0.044 0.28847,-0.085 0.30458,-0.09 0.0233,-0.01 0.0293,0.589 0.0293,2.9349 0,3.2057 -0.007,3.027 0.12978,3.1169 0.0476,0.031 0.1465,0.045 0.42893,0.062 1.12246,0.064 2.18752,0.4409 3.05702,1.0822 0.1875,0.1383 0.63749,0.5181 0.66328,0.5598 0.018,0.029 0.006,0.026 -0.28292,-0.078 z"/>
                        </svg>
                        Table of content
                    </h2>


                    <div class="chip-container">
                        <label class="chip-label" for="chips-filter">Filter by:</label>
                        <div class="chips">
                            <button id="chips-filter" class="chip-button chip-converters">
                                <i class="material-icons">sync_alt</i>Converters
                            </button>
                            <button class="chip-button chip-populator">
                                <i class="material-icons">build_circle</i>Populators
                            </button>
                            <button class="chip-button chip-factories">
                                <i class="material-icons">factory</i>Factories
                            </button>
                            <!-- Neue Sortierchips -->
                            <button class="chip-button chip-sort-name">
                                <i class="material-icons">sort_by_alpha</i>Sort by Name
                            </button>
                            <button class="chip-button chip-sort-type">
                                <i class="material-icons">category</i>Sort by Type
                            </button>
                            <button class="chip-button chip-reset">
                                <i class="material-icons">restart_alt</i>Reset all
                            </button>
                        </div>
                    </div>

                    <div class="search-container">
                        <input type="text" id="search" placeholder="Suche..." onkeyup="filterAccordion()">
                    </div>

                    <div class="accordion">
                        {% for id, service in services %}
                            <details class="accordion-item">
                                <summary id="{{ id }}" type="{{ service.type }}" class="type-{{ service.type }}">{{ id }}</summary>
                                <div class="accordion-content">
                                    <table class="argument-table">
                                        <thead>
                                        <tr>
                                            <th>Klasse</th>
                                            <th>
                                                <code class="class-link">
{#                                                    <a href="{{ _self.class_gitlab_link(service.class) }}" target="_blank" class="class-link">#}
                                                    {{ service.class }}
                                                </code>
                                                <button class="class-copy" data-class="{{ service.class }}" title="Copy class name">
                                                    <i class="material-icons">content_copy</i>
                                                </button>
                                            </th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        {% for name, argument in service.arguments %}
                                            <tr>
                                                <td><code>{{ name }}<code></td>
                                                <td>{{ _self.render_argument_cell(argument) }}</td>
                                            </tr>
                                        {% endfor %}
                                        </tbody>
                                    </table>
                                </div>
                            </details>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{#{% macro class_gitlab_link(className) %}#}
{#    {% set baseUrl = 'https://gitlab.example.com/your-group/your-repo/-/blob/main/src/' %}#}
{#    {% set relativePath = className|replace({'\\': '/'}) ~ '.php' %}#}
{#    {{ baseUrl ~ relativePath|replace({'Neusta/': ''}) }}#}
{#{% endmacro %}#}

{% macro render_argument_cell(argument) %}
    {% import _self as self %}
    {% if argument.type == 'array' %}
        <table class="argument-subtable">
            {% for argumentName, argumentValue in argument.value %}
                <tr>
                    <td>{{ argumentName }}</td>
                    <td>{{ self.render_argument_cell(argumentValue) }}</td>
                </tr>
            {% endfor %}
        </table>
    {% else %}
        {% if argument.value starts with '@' %}
            <a href="#{{ argument.value|slice(1) }}">{{ argument.value }}</a>
        {% else %}
            {{ argument.value }}
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro render_argument(argument, name) %}
    <dd>
        <code>
            {{ name is not empty ? name ~ ':' }}

            {% if argument.type == 'array' %}
                {% for argumentName, argumentValue in argument.value %}
                    <dl>
                        {{ _self.render_argument(argumentValue, argumentName) }}
                    </dl>
                {% endfor %}
            {% else %}
                {% if argument.value starts with '@' %}
                    <a href="#{{ argument.value|slice(1) }}">{{ argument.value }}</a>
                {% else %}
                    {{ argument.value }}
                {% endif %}
            {% endif %}
        </code>
    </dd>
{% endmacro %}
