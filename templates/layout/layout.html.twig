<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Service Inspector{% endblock %}</title>

    {# Fonts & Icons #}
    <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    {# Inline CSS (kann auch ausgelagert werden) #}
    {% block styles %}
        <style>

            .logo-neusta {
                position: absolute;
                top: -60px;
                right: -90px;
                opacity: 0.3;
            }

            body {
                background-color: #eef0f6;
                font-family: "Inter", sans-serif;
                padding: 2em;
            }

            .container {
                display: flex;
                flex-direction: column;
                margin: 3rem auto;
                width: 100%;
                max-width: 1600px;
            }

            h1 {
                font-weight: 900;
                margin-bottom: 10px;
            }

            h2 {
                margin-top: 0;
            }

            p > strong,
            dt {
                display: block;
                margin-bottom: 3px;
            }

            dl dd {
                margin: 0;
            }

            hr {
                color: #000;
                border: 1px solid #f7f7f7;
                width: 100%;
                margin-top: 10px;
            }

            .date {
                color: #131313;
                font-weight: 800;
                font-size: 1.7rem;
                margin-left: auto;
                margin-top: 10px;
                margin-bottom: 10px;
            }

            code {
                color: #ffffff;;
                font-weight: 800;
                font-size: .8rem;
                margin-left: auto;
                padding: 5px 10px;
                display: block;
                background-color: #821d72;
            }

            code a {
                color: #4ee5f5;
            }

            .service-items {
                color: #131313;

                font-size: 1rem;
                margin-left: auto;
            }

            .service-items-total {
                font-weight: 600;
                margin-bottom: 10px;
                display: block;
            }


            .header-container {
                display: grid;
                grid-template-columns: 2fr 1fr;
                gap: 20px;
            }

            @media (max-width: 768px) {
                .container {
                    grid-template-columns: 1fr;
                }
            }

            .header-box {
                border-radius: 2.5rem;
                flex-direction: column;
                align-items: flex-start;
                padding: 2rem;
                display: flex;
                position: relative;
                background-color: rgba(255, 255, 255, 0.6);
                color: #202020;
                box-shadow: 0 20px 30px -10px rgb(16 16 39 / 7%);
                text-wrap: balance;
                margin-bottom: 40px;
                overflow: hidden;
                backdrop-filter: blur(5px)
            }

            .header-box--info {

            }

            .welcome {
                display: flex;
                align-items: center;
                font-weight: 800;
                gap: 20px;
                margin-left: auto;
                color: #141414;

            }

            .welcome_user {
                width: 30px;
                height: 30px;
            }

            .user-name {
                font-style: italic;
            }

            .welcome_user-circle {
                display: flex;
                justify-content: center;
                align-items: center;
                background-color: #202020;
                width: 40px;
                height: 40px;
                border-radius: 50%;
            }

            .search-level {
                border-radius: 2.5rem;
                flex-direction: column;
                align-items: flex-start;
                padding: 2rem;
                display: flex;
                position: relative;
                background-color: #fff;
                background-image: linear-gradient(-225deg, #fffeff 0%, #d7fffe 100%);
                color: #060633;
                box-shadow: 0 20px 30px -10px rgb(16 16 39 / 7%);
                text-wrap: balance;
                margin-bottom: 40px;
            }

            .body-container {
                border-radius: 2.5rem;
                flex-direction: column;
                align-items: flex-start;
                min-height: 15rem;
                padding: 2rem;
                display: flex;
                position: relative;
                background-color: rgba(2550, 255, 255, .9);
                color: #060633;
                box-shadow: 0 20px 30px -10px rgb(16 16 39 / 7%);
                text-wrap: balance;
            }


            .body-headline {
                display: flex;
                align-items: center;
            }

            .book {
                margin-right: 10px;
            }

            .search-container {
                display: flex;
                align-items: center;
                border-radius: 8px;
                width: 100%;
                padding-right: 12px;
                justify-content: space-between;

            }

            .search-container input[type="text"] {
                flex: 1;
                padding: 10px;
                border: none;
                border-radius: 8px;
                font-size: 16px;
                background-color: rgb(255, 255, 255);
                color: rgba(39, 39, 41, 0.78);
                background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 56.966 56.966' fill='%23717790c7'%3e%3cpath d='M55.146 51.887L41.588 37.786A22.926 22.926 0 0046.984 23c0-12.682-10.318-23-23-23s-23 10.318-23 23 10.318 23 23 23c4.761 0 9.298-1.436 13.177-4.162l13.661 14.208c.571.593 1.339.92 2.162.92.779 0 1.518-.297 2.079-.837a3.004 3.004 0 00.083-4.242zM23.984 6c9.374 0 17 7.626 17 17s-7.626 17-17 17-17-7.626-17-17 7.626-17 17-17z'/%3e%3c/svg%3e");
                background-size: 14px;
                background-repeat: no-repeat;
                background-position: 16px 50%;
                padding-left: 45px;
                box-shadow: 0 20px 30px -10px rgb(16 16 39 / 7%);
                margin-bottom: 30px;
                border: 2px solid #282829;
            }

            .accordion {
                width: 90%;
                margin: 0;
            }

            .accordion-item {
                box-shadow: 0px 1px 1px 1px rgba(134, 134, 134, 0.6);
                background-color: #fff;
                border-radius: 5px;
                margin-bottom: 10px;
                overflow: hidden;
            }

            summary {
                position: relative;
                padding: 10px 45px 10px 15px;
                cursor: pointer;
                font-size: 16px;
                font-weight: 500;
                outline: none;
                color: #fff;
                background: #282829;
                list-style: none;
            }


            summary::before {
                font-family: 'Material Icons';
                content: 'expand_more';
                font-size: 24px;
                font-weight: 300;
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
            }

            details[open] summary::before {
                content: 'expand_less';
            }

            details {
                border-radius: 8px;
                overflow: hidden;
            }

            details[open] summary {
                background: #053c57;
            }

            .accordion-content {
                padding: 15px;
            }

            .chips {
                display: flex;
                gap: 10px;
                margin-bottom: 30px;
            }

            .chip-button {
                border-radius: 25px;
                border: none;
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 5px;
                padding: 5px 10px;
                transition: all 0.5s;;
            }

            .chip-button:hover,
            .chip-button.active {
                color: #fff;

            }

            .chip-button.active {
                color: #fff;
                outline-offset: 2px;
                outline-width: 2px;
                outline-style: solid;
                padding: 5px 40px;
            }

            .chip-converters {
                background-color: #00968783;
            }

            .chip-populator {
                background-color: #e91e6287;
            }

            .chip-factories {
                background-color: #3f51b58c;
            }

            .chip-converters:hover,
            .chip-converters.active {
                background-color: #009688;
                outline-color: #009688;
            }

            .chip-populator:hover,
            .chip-populator.active {
                background-color: #E91E63;
                outline-color: #E91E63;
            }

            .chip-factories:hover,
            .chip-factories.active {
                background-color: #3F51B5;
                outline-color: #3F51B5;
            }

            .chip-label {
                display: block;
                font-size: 14px;
                padding: 0 5px;
                margin-bottom: 10px;
            }


        </style>
    {% endblock %}
</head>

<body>
{% block body %}{% endblock %}

{% block scripts %}
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            // Alle Chip Buttons selektieren
            const buttons = document.querySelectorAll('.chip-button');

            buttons.forEach(button => {
                button.addEventListener('click', () => {
                    // Überprüfen, ob der Button bereits die 'active' Klasse hat
                    if (button.classList.contains('active')) {
                        // Wenn der Button die 'active' Klasse hat, entferne sie
                        button.classList.remove('active');
                    } else {
                        // Wenn der Button keine 'active' Klasse hat, entferne sie von allen Buttons und füge sie dem geklickten Button hinzu
                        buttons.forEach(btn => btn.classList.remove('active'));
                        button.classList.add('active');
                    }
                });
            });

            // Neues Datum-Objekt erstellen
            const heute = new Date();

            // Datum formatieren (z. B. "01. April 2025")
            const options = {day: '2-digit', month: 'long', year: 'numeric'};
            const formatiertesDatum = heute.toLocaleDateString("de-DE", options);

            // In das HTML-Element einfügen
            document.getElementById("datum").textContent = formatiertesDatum;
        });

        function filterAccordion() {
            let input = document.getElementById("search").value.toLowerCase();
            let details = document.querySelectorAll(".accordion-item");

            details.forEach(detail => {
                let summary = detail.querySelector("summary").textContent.toLowerCase();

                if (summary.includes(input)) {
                    detail.style.display = "block";
                } else {
                    detail.style.display = "none";
                }
            });
        }

        function updateAccordionCount() {
            const count = document.querySelectorAll('.accordion-item').length;
            document.getElementById('accordion-count').textContent = `Totale Services: ${count}`;
        }

        function countPrefixes() {
            // Hole alle summary-Elemente innerhalb der .accordion-item
            const summaryElements = document.querySelectorAll('.accordion-item summary');

            // Zähler für jedes Präfix
            const prefixCounts = {
                pimcore: 0,
                trinity: 0,
                headless: 0,
                other: 0
            };

            // Durchlaufe alle summary-Elemente
            summaryElements.forEach(summary => {
                // Extrahiere die id
                const id = summary.id;
                let prefix = '';

                // Überprüfe auf exakte Übereinstimmung des Präfixes
                if (id.startsWith('neusta_pimcore')) {
                    prefix = 'pimcore';
                } else if (id.startsWith('neusta_trinity')) {
                    prefix = 'trinity';
                } else if (id.startsWith('neusta_headless')) {
                    prefix = 'headless';
                } else {
                    prefix = 'other'; // Alles andere geht in "Sonstiges"
                }

                // Falls das Präfix in unserem Zähler existiert, erhöhe den Wert
                if (prefixCounts[prefix] !== undefined) {
                    prefixCounts[prefix]++;
                }
            });

            // Aktualisiere die Anzeige für jedes Präfix
            document.getElementById('pimcore-count').textContent = `Pimcore: ${prefixCounts.pimcore}`;
            document.getElementById('trinity-count').textContent = `Trinity: ${prefixCounts.trinity}`;
            document.getElementById('headless-count').textContent = `Headless: ${prefixCounts.headless}`;
            document.getElementById('other-count').textContent = `Sonstiges: ${prefixCounts.other}`;
        }

        updateAccordionCount();
        countPrefixes();
    </script>
{% endblock %}
</body>
</html>
